pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  environment{
        DOCKERHUB_USERNAME = "zeemlinux"
        APP_NAME = "spring-boot-app"
        IMAGE_TAG = "${BUILD_NUMBER}"
        IMAGE_NAME = "${DOCKERHUB_USERNAME}" + "/" + "${APP_NAME}"
        REGISTRY_CREDS = 'dockertoken'
        SONAR_LOGIN = credentials('sonartoken')
        SONAR_URL = "http://192.168.1.182:9000"
    }
  
  stages {
    stage('Checkout') {
      steps {
        checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/zeemshomelab/ultimate-demo.git']])
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.1.182:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonartoken', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "${DOCKERHUB_USERNAME}" + "/" + "${APP_NAME}:${BUILD_NUMBER}"
         DOCKERFILE_LOCATION = "."
        REGISTRY_CREDENTIALS = credentials('dockertoken')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dockertoken") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Updating Kubernetes Deployment File'){
            steps{
                script{
                    sh """
                    cat deployment.yml
                    sed -i 's/${APP_NAME}.*/${APP_NAME}:${IMAGE_TAG}/g' deployment.yml
                    cat deployment.yml

                    """
                }
            }
        }
        stage(' Push the Changed Deployment File Git '){
            steps{
              withCredentials([gitUsernamePassword(credentialsId: 'githubtoken', gitToolName: 'Default')]) {
                script{
                    sh """
                     git config --global user.name "zeemshomelab"
                     git config --global user.email zeems.homelab@gmail.com
                     git add deployment.yml
                     git commit -m "updated deployment.yml file"
                     git push https://github.com/zeemshomelab/ultimate-demo.git HEAD:main
                    """
                   }
                   
                }
            }
       }
   
  }
}
